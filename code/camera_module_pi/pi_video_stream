#!/usr/bin/env python

# Code based on pyimagesearch
# https://www.pyimagesearch.com/2015/03/30/accessing-the-raspberry-pi-camera-with-opencv-and-python/

# Image frame dependencies
from picamera.array import PiRGBArray
from picamera import PiCamera
import time
import cv2

# Script dependencies
import argparse as argp

def piCameraCapture():
    camera = PiCamera()
    camera.resolution = (640, 480)
    camera.framerate = 32
    rawCapture = PiRGBArray(camera, size=(640, 480))

    time.sleep(0.1)

    for frame in camera.capture_continuous(rawCapture, format="bgr", use_video_port=True):
        image = frame.array

        cv2.imshow("Frame", image)
        key = cv2.waitKey(1) & 0xFF

        rawCapture.truncate(0)

        if key == ord("q"):
            break
    cv2.destroyAllWindows()

def standardCameraCapture(mirror=False):
    cam = cv2.VideoCapture(0)
    while True:
        ret_val, imgage = cam.read()
        if mirror:
            imgage = cv2.flip(img, 1)
        cv2.imshow("Frame", image)

        key = cv2.waitKey(1) & 0xFF
        if key == ord("q"):
            break
    cv2.destroyAllWindows()

if __name__ == '__main__':
    parser = argp.ArgumentParser(description='Script to toggle between using python of host camera as source to OpenCV frames')
    parser.add_argument('-p', '--pi', dest='pi_cam', action='store_true', help='Set camera feed to use pi camera over usb/built-in camera')
    args = parser.parse_args()
    if args.pi_cam:
        piCameraCapture()
    else:
        standardCameraCapture()
